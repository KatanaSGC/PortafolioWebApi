// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portafolio.WebApi.Infraestructura.Context;

namespace Portafolio.WebApi.Infraestructura.Migrations
{
    [DbContext(typeof(PortafolioContext))]
    [Migration("20210909034711_Portafolio")]
    partial class Portafolio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Portafolio.WebApi.Entidades.Cargo.CargoEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Portafolio.WebApi.Entidades.Departamento.DepartamentoEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Portafolio.WebApi.Entidades.Empleado.EmpleadoEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CargoEntidadId")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoEntidadId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CargoEntidadId");

                    b.HasIndex("DepartamentoEntidadId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Portafolio.WebApi.Entidades.Empleado.EmpleadoEntidad", b =>
                {
                    b.HasOne("Portafolio.WebApi.Entidades.Cargo.CargoEntidad", "CargoEntidad")
                        .WithMany("EmpleadoEntidad")
                        .HasForeignKey("CargoEntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portafolio.WebApi.Entidades.Departamento.DepartamentoEntidad", "DepartamentoEntidad")
                        .WithMany("EmpleadoEntidad")
                        .HasForeignKey("DepartamentoEntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CargoEntidad");

                    b.Navigation("DepartamentoEntidad");
                });

            modelBuilder.Entity("Portafolio.WebApi.Entidades.Cargo.CargoEntidad", b =>
                {
                    b.Navigation("EmpleadoEntidad");
                });

            modelBuilder.Entity("Portafolio.WebApi.Entidades.Departamento.DepartamentoEntidad", b =>
                {
                    b.Navigation("EmpleadoEntidad");
                });
#pragma warning restore 612, 618
        }
    }
}
